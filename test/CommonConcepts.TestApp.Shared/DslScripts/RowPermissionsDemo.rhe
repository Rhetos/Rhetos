
// WARNING: When modifying any part of this script, please also update the code samples in row permissions documentation.

//=========================================================
// Simple row permission rules:

    Module DemoRowPermissions1
    {
        Entity Division
        {
            ShortString Name;
        }
        
        Entity Employee
        {
            ShortString UserName;
            Reference Division;
        }
        
        Entity Document
        {
            ShortString Title;
            DateTime Created { CreationTime; }
            Reference Division;
            
            RowPermissions
            {
                Allow WithinDivision 'context =>
                    {
                        Guid myDivisionId = context.Repository.DemoRowPermissions1.Employee.Query()
                            .Where(e => e.UserName == context.UserInfo.UserName)
                            .Select(e => e.Division.ID)
                            .SingleOrDefault();
                        return item => item.Division.ID == myDivisionId;
                    }';
            }
        }
    }

//=========================================================
// Combining multiple rules:

    Module DemoRowPermissions2
    {
        Entity Region
        {
            ShortString Name;
        }
        
        Entity Division
        {
            ShortString Name;
            Reference Region;
        }
        
        Entity Employee
        {
            ShortString UserName;
            Reference Division;
        }
        
        Entity RegionSupervisor
        {
            Reference Employee;
            Reference Region;
        }
        
        Entity Document
        {
            ShortString Title;
            DateTime Created { CreationTime; }
            Reference Division;
            
            RowPermissions
            {
                Allow WithinDivision 'context =>
                    {
                        Guid myDivisionId = context.Repository.DemoRowPermissions2.Employee.Query()
                            .Where(e => e.UserName == context.UserInfo.UserName)
                            .Select(e => e.Division.ID)
                            .SingleOrDefault();
                        return item => item.Division.ID == myDivisionId;
                    }';
                
                AllowRead SupervisedRegions 'context =>
                    {
                        List<Guid> myRegionIds = context.Repository
                          .DemoRowPermissions2.RegionSupervisor.Query()
                            .Where(rs => rs.Employee.UserName == context.UserInfo.UserName)
                            .Select(rs => rs.Region.ID)
                            .ToList();
						
                        if (myRegionIds.Count == 0)
                            return item => false; // Minor optimization.
						
                        return item => myRegionIds.Contains(item.Division.Region.ID);
                    }';
                
                DenyWrite PreviousYears 'context =>
                    {
						var currentYear = new DateTime(DateTime.Today.Year, 1, 1);
						return item => item.Created < currentYear;
                    }';
            }
        }
    }

//=========================================================
// Inheriting row permissions:

    Module DemoRowPermissions2
    {
        AutoInheritRowPermissions;
        
        Browse DocumentBrowse DemoRowPermissions2.Document
        {
            Take 'Title';
            Take 'Division.Name';
        }
        
        Entity DocumentComment
        {
            Reference Document { Detail; }
            ShortString Comment;
        }
        
        Entity DocumentApproval
        {
            Extends DemoRowPermissions2.Document;
            Reference ApprovedBy DemoRowPermissions2.Employee;
            ShortString Note;
            
            RowPermissions
            {
                // This rule is joined with the inherited rules from DemoRowPermissions2.Document.
                DenyWrite ApprovedByCurrentUser 'context =>
                    {
                        var myEmployeeId = context.Repository.DemoRowPermissions2.Employee.Query()
                            .Where(e => e.UserName == context.UserInfo.UserName)
                            .Select(e => e.ID)
                            .SingleOrDefault();
                        return item => item.ApprovedBy.ID != myEmployeeId;
                    }';
            }
        }

        SqlQueryable DocumentInfo
            "SELECT
                ID,
                Title2 = Title + '_2',
                Division2ID = DivisionID
            FROM
                DemoRowPermissions2.Document"
        {
            Extends DemoRowPermissions2.Document;
            ShortString Title2;
            Reference Division2 DemoRowPermissions2.Division { SamePropertyValue 'Base.Division'; }

            RowPermissions { InheritFromBase; }

            AutodetectSqlDependencies;
        }
    }
