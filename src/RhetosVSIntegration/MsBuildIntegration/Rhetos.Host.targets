<Project>
  <Target Name="ResolveDeployRhetosAppInput" DependsOnTargets="CopyFilesToOutputDirectory" BeforeTargets="DeployRhetosApp">
    <Message Text="ResolveDeployRhetosAppInput" />
    <ItemGroup>
      <_DeployRhetosAppInput Include="$(TargetDir)**\*" />
    </ItemGroup>
  </Target>

  <Target Name="DeployRhetosApp" DependsOnTargets="CopyFilesToOutputDirectory" AfterTargets="Build" Condition="'$(RhetosDeploy)'=='True'"
    Inputs="@(_DeployRhetosAppInput)" Outputs="$(RhetosDatabaseUpdated)">
    <Message Text="DeployRhetosApp" />
    <Exec Command="dotnet &quot;$(TargetDir)rhetos.dll&quot; --msbuild-format dbupdate &quot;$(TargetDir)\$(AssemblyName).dll&quot;" CustomErrorRegularExpression="\[Error\]" CustomWarningRegularExpression="\[(Warn|Warning)\]" />
    <WriteLinesToFile File="$(RhetosDatabaseUpdated)" Lines="" Overwrite="true" />
  </Target>

  <Target Name="RhetosGenerateLinqPadScripts" DependsOnTargets="ResolveReferences" BeforeTargets="AssignTargetPaths">
    <ItemGroup>
      <_RhetosHostProjectReferences Include="@(ReferencePath)" Condition="'%(ReferencePath.MSBuildSourceProjectFile)' != ''" />
      <!--The libraries from _RhetosHostProjectReferences will end up directly in the bin folder, so the directory path is removed.
      Additional RhetosLinqPadReference are considered as strings so any plugin packages can specify files from the runtimes subfolder.-->
      <_RhetosHostAppAssemblies Include="@(_RhetosHostProjectReferences -> '%(Filename)%(Extension)');@(RhetosLinqPadReference->'%(Identity)')" />
    </ItemGroup>
    <PropertyGroup>
      <_RhetosDomLinqPadScriptPath>$(BaseIntermediateOutputPath)Rhetos\LinqPad\Rhetos DOM.linq</_RhetosDomLinqPadScriptPath>
      <_RhetosHostAppLinqPadReferences>@(_RhetosHostAppAssemblies -> '&lt;Reference Relative="..\%(Identity)"&gt;..\%(Identity)&lt;/Reference&gt;', '
  ')</_RhetosHostAppLinqPadReferences>
      <_RhetosDomLinqPadScript>
<![CDATA[
<Query Kind="Program">
  <Reference Relative="..\$(AssemblyName).dll">..\$(AssemblyName).dll</Reference>
  <Reference Relative="..\$(AssemblyName).deps.json">..\$(AssemblyName).deps.json</Reference>
  <Reference Relative="..\$(AssemblyName).runtimeconfig.json">..\$(AssemblyName).runtimeconfig.json</Reference>
  $(_RhetosHostAppLinqPadReferences)
  <Reference Relative="..\Autofac.dll">..\Autofac.dll</Reference>
  <Reference Relative="..\Microsoft.CodeAnalysis.CSharp.dll">..\Microsoft.CodeAnalysis.CSharp.dll</Reference>
  <Reference Relative="..\Microsoft.CodeAnalysis.dll">..\Microsoft.CodeAnalysis.dll</Reference>
  <Reference Relative="..\Microsoft.Extensions.Localization.Abstractions.dll">..\Microsoft.Extensions.Localization.Abstractions.dll</Reference>
  <Reference Relative="..\Newtonsoft.Json.dll">..\Newtonsoft.Json.dll</Reference>
  <Reference Relative="..\NLog.dll">..\NLog.dll</Reference>
  <Reference Relative="..\Rhetos.CommonConcepts.dll">..\Rhetos.CommonConcepts.dll</Reference>
  <Reference Relative="..\Rhetos.Core.dll">..\Rhetos.Core.dll</Reference>
  <Reference Relative="..\Rhetos.Core.DslParser.dll">..\Rhetos.Core.DslParser.dll</Reference>
  <Reference Relative="..\Rhetos.Core.Integration.dll">..\Rhetos.Core.Integration.dll</Reference>
  <Reference Relative="..\runtimes\win-x64\native\sni.dll">..\runtimes\win-x64\native\sni.dll</Reference>
  <Reference Relative="..\runtimes\win\lib\net8.0\System.Diagnostics.EventLog.dll">..\runtimes\win\lib\net8.0\System.Diagnostics.EventLog.dll</Reference>
  <Reference Relative="..\runtimes\win\lib\net8.0\System.Diagnostics.EventLog.Messages.dll">..\runtimes\win\lib\net8.0\System.Diagnostics.EventLog.Messages.dll</Reference>
  <Namespace>Autofac</Namespace>
  <Namespace>Rhetos</Namespace>
  <Namespace>Rhetos.Configuration.Autofac</Namespace>
  <Namespace>Rhetos.Dom</Namespace>
  <Namespace>Rhetos.Dom.DefaultConcepts</Namespace>
  <Namespace>Rhetos.Dsl</Namespace>
  <Namespace>Rhetos.Dsl.DefaultConcepts</Namespace>
  <Namespace>Rhetos.Logging</Namespace>
  <Namespace>Rhetos.Persistence</Namespace>
  <Namespace>Rhetos.Processing</Namespace>
  <Namespace>Rhetos.Processing.DefaultCommands</Namespace>
  <Namespace>Rhetos.Security</Namespace>
  <Namespace>Rhetos.Utilities</Namespace>
  <Namespace>System.Data.Entity</Namespace>
  <Namespace>System.DirectoryServices</Namespace>
  <Namespace>System.Runtime.Serialization.Json</Namespace>
  <IncludeAspNet>true</IncludeAspNet>
</Query>

void Main()
{
    ConsoleLogger.MinLevel = EventType.Info%3B // Use EventType.Trace for more detailed log.
    string rhetosHostAssemblyPath = Path.Combine(Path.GetDirectoryName(Util.CurrentQueryPath), @"..\$(AssemblyName).dll")%3B
    using (var scope = LinqPadRhetosHost.CreateScope(rhetosHostAssemblyPath))
    {
        var context = scope.Resolve<Common.ExecutionContext>()%3B
        var repository = context.Repository%3B

        // Query data from the `Common.Claim` table:
        
        var claims = repository.Common.Claim.Query()
            .Where(c => c.ClaimResource.StartsWith("Common.") && c.ClaimRight == "New")
            .ToSimple()%3B // Removes ORM navigation properties from the loaded objects.
            
        claims.ToString().Dump("Common.Claims SQL query")%3B
        claims.Dump("Common.Claims items")%3B
        
        // Add and remove a `Common.Principal`:
        
        var testUser = new Common.Principal { Name = "Test123", ID = Guid.NewGuid() }%3B
        repository.Common.Principal.Insert(new[] { testUser })%3B
        repository.Common.Principal.Delete(new[] { testUser })%3B
        
        // Print logged events for the `Common.Principal`:
        
        repository.Common.LogReader.Query()
            .Where(log => log.TableName == "Common.Principal" && log.ItemId == testUser.ID)
            .ToList()
            .Dump("Common.Principal log")%3B
            
        Console.WriteLine("Done.")%3B
        
        //scope.CommitAndClose()%3B // Database transaction is rolled back by default.
    }
}
]]>
      </_RhetosDomLinqPadScript>
    </PropertyGroup>
    <WriteLinesToFile Lines="$(_RhetosDomLinqPadScript)" Overwrite="True" WriteOnlyWhenDifferent="True"
        File="$(_RhetosDomLinqPadScriptPath)" />
    <ItemGroup>
      <_RhetosLinqPad Include="$(_RhetosDomLinqPadScriptPath)" />
      <None Include="@(_RhetosLinqPad)" CopyToOutputDirectory="PreserveNewest" Link="LinqPad\%(Filename)%(Extension)" />
    </ItemGroup>
  </Target>

  <Target Name="AfterClean">
    <!-- EfMappingGeneratedViews.json in the bin folder is generated by rhetos dbupdate, so MSBuild would not automatically delete the old version on cleanup. -->
    <Delete Files="$(OutputPath)EfMappingGeneratedViews.json" ContinueOnError="true" />
  </Target>

</Project>
