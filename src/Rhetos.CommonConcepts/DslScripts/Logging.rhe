Module Common
{
    // Recommended for reading the Log table without locking the other server transactions. Data will include transactions that are not yet committed.
    SqlQueryable LogReader <SQL\LogReader.sql>
    {
        AllPropertiesFrom Common.Log;
        SqlDependsOn Common.Log;
    }
    
    // Recommended for reading the LogRelatedItem table without locking the other server transactions. Data will include transactions that are not yet committed.
    SqlQueryable LogRelatedItemReader <SQL\LogRelatedItemReader.sql>
    {
        AllPropertiesFrom Common.LogRelatedItem;
        SqlDependsOn Common.LogRelatedItem;
    }

    Entity Log
    {
        DateTime Created { SqlDefault <SQL\Log.Created default.sql>; Required; }
        ShortString UserName { SqlDefault <SQL\Log.UserName default.sql>; Required; }
        ShortString Workstation { SqlDefault <SQL\Log.Workstation default.sql>; Required; }
        ShortString ContextInfo { SqlDefault <SQL\Log.ContextInfo default.sql>; }
        ShortString Action { Required; }
        ShortString TableName;
        Guid ItemId { SqlIndex; }
        LongString Description;
        
        SqlIndexMultiple 'TableName Action';
        PrerequisiteAllProperties;
		DenyUserEdit;
    }
	
	Action AddToLog '(parameter, repository, userInfo) =>
		{
			if (parameter.Action == null)
				throw new Rhetos.UserException("Parameter Action is required.");
			string sql = @"INSERT INTO Common.Log (Action, TableName, ItemId, Description)
                SELECT {0}, {1}, {2}, {3}";
			_executionContext.SqlExecuter.ExecuteSqlRaw(sql, new object[] {
				parameter.Action,
				parameter.TableName,
				parameter.ItemId,
				parameter.Description });
		}'
	{
		ShortString Action;
        ShortString TableName;
        Guid ItemId;
        LongString Description;
	}
    
    Entity LogRelatedItem
    {
        Reference Log { Detail; Required; }
        ShortString TableName { SqlIndex; }
        Guid ItemId { SqlIndex; }
        ShortString Relation; // Describes what is the referenced Log.ItemId to the LogRelatedItem.ItemId.
        
        PrerequisiteAllProperties;
        DenyUserEdit;
    }
    
    SqlQueryable RelatedEventsSource <SQL\RelatedEvents.sql>
    {
        AllPropertiesFrom Common.Log;
        
        Reference Log Common.LogReader;
        ShortString Relation;
        ShortString RelatedToTable;
        Guid RelatedToItem;
        
        SqlDependsOn Common.LogReader;
        SqlDependsOn Common.LogRelatedItemReader;
    }
}