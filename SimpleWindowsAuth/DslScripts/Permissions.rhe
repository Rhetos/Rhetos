Module Common
{
    // Principal is user, a client application or any other actor that can be authenticated.
	Entity Principal
	{
		ShortString Name { Required; Unique; }
		Logging { AllProperties; }
	}

	Entity Permission
	{
		Reference Principal Common.Principal { Required; CascadeDelete; }
		Reference Claim Common.Claim { Required; CascadeDelete; }
		Unique Common.Permission.Principal Common.Permission.Claim;
		Bool IsAuthorized { Required; } // If IsAuthorized equals false then autorization is explicitly denied.
		Logging { AllProperties; }
	}
	
	//=====================================================
	// FILTERS AND HELPERS:
	
	Browse PermissionBrowse Common.Permission	
	{
		Implements 'Rhetos.SimpleWindowsAuth.IPermissionBrowse, Rhetos.SimpleWindowsAuth';
		
		ShortString ClaimResource {From 'Claim.ClaimResource';}
		ShortString ClaimRight {From 'Claim.ClaimRight';}
		ShortString Principal {From 'Principal.Name';}
		Bool IsAuthorized {From IsAuthorized;}
	}
}