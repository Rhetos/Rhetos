[*.cs]

# CS1573: Parameter 'parameter' has no matching param tag in the XML comment
dotnet_diagnostic.CS1573.severity = suggestion

# CS1591: Missing XML comment for publicly visible type or member
dotnet_diagnostic.CS1591.severity = suggestion

# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = suggestion

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = suggestion

# CA1707: Identifiers should not contain underscore
dotnet_diagnostic.CA1707.severity = suggestion

# CA1002: Do not expose generic lists
dotnet_diagnostic.CA1002.severity = suggestion

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = suggestion

# CA1307: Specify StringComparison for clarity
dotnet_diagnostic.CA1307.severity = suggestion

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = suggestion

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = suggestion

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = suggestion

# CA1065: Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = suggestion

# CA1024: Use properties where appropriate
dotnet_diagnostic.CA1024.severity = suggestion

# CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = suggestion

# CA1721: Property names should not match get methods
dotnet_diagnostic.CA1721.severity = suggestion

# Unit tests that test reflection based functionality rely
# on private classes that are never initialized
# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = suggestion

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = suggestion

# CA1014: Mark assemblies with CLSCompliantAttribute
dotnet_diagnostic.CA1014.severity = suggestion

# CA1720: Identifiers should not contain type names
dotnet_diagnostic.CA1720.severity = suggestion

# CA1815: Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = suggestion

# CA1036: Override methods on comparable types
dotnet_diagnostic.CA1036.severity = suggestion

# The warning is suppressed because we want to make it more clear what the intention was
# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = suggestion

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = suggestion

# This rule is useful when applied to shared libraries that 
# are used in languages that do not support operator overloading
# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = suggestion

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = suggestion

# const interpolated string are currently in preview mode (which are suggested by by the analyzer) and the analyzer does not take this into account
# remove the suppression for this warning after the feature will be available
# CA1802: Use Literals Where Appropriate
dotnet_diagnostic.CA1802.severity = suggestion

# CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = suggestion

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = suggestion

# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity = suggestion

# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = suggestion

# This warning is suppressed because there are many comparisons in this solution where it is important to check for empty string and not null.
# CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = suggestion

# CA1003: Use generic event handler instances
dotnet_diagnostic.CA1003.severity = suggestion

# CA1813: Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = suggestion

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = suggestion

# CA2100: Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = suggestion

# Testing shows that there is no performance benefits. There is even a slight degradation with the char.
# CA1847: Use char literal for a single character lookup
dotnet_diagnostic.CA1847.severity = suggestion

# CA1308: Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = suggestion
